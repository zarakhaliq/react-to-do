[{"C:\\Users\\zarak\\to-do\\src\\index.js":"1","C:\\Users\\zarak\\to-do\\src\\App.js":"2","C:\\Users\\zarak\\to-do\\src\\reportWebVitals.js":"3","C:\\Users\\zarak\\to-do\\src\\components\\Form.js":"4","C:\\Users\\zarak\\to-do\\src\\components\\TodoList.js":"5","C:\\Users\\zarak\\to-do\\src\\components\\Todo.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":1712,"mtime":1608432984824,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":1379,"mtime":1608431749708,"results":"11","hashOfConfig":"8"},{"size":550,"mtime":1608431983462,"results":"12","hashOfConfig":"8"},{"size":1186,"mtime":1608424945331,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1yx2aul",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"C:\\Users\\zarak\\to-do\\src\\index.js",[],["29","30"],"C:\\Users\\zarak\\to-do\\src\\App.js",["31"],"import React, {useState, useEffect} from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  //inputText is the value of the input which is a blank string when you load the page.\n  //setInputTextValue is a function that changes the inputText value.\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  //useEffect: useEFFECT runs the first time you load the page and everytime a state (useState) in the array changes\n  //useEffect(() => {\n  //getLocalTodos();\n  //}, []);\n  useEffect(() => {\n    filteredTodosHandler();\n    //saveLocalTodos();\n  }, [todos, status]);\n\n  //Functions\n\n  const filteredTodosHandler = () => {\n    switch (status) {\n      case \"completed\":\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n      case \"incomplete\":\n        setFilteredTodos(todos.filter(todo => todo.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Personal Todo List</h1>\n      </header>\n      <div className=\"formSection\">\n        <Form\n          inputText={inputText}\n          setInputText={setInputText}\n          todos={todos}\n          setTodos={setTodos}\n          setStatus={setStatus}\n        />\n        <TodoList\n          setTodos={setTodos}\n          todos={todos}\n          filteredTodos={filteredTodos}\n        />\n        <div></div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\zarak\\to-do\\src\\reportWebVitals.js",[],"C:\\Users\\zarak\\to-do\\src\\components\\Form.js",[],"C:\\Users\\zarak\\to-do\\src\\components\\TodoList.js",[],"C:\\Users\\zarak\\to-do\\src\\components\\Todo.js",["32"],"import React from \"react\";\r\n\r\nconst Todo = ({text, todos, setTodos, todo, filteredTodos}) => {\r\n  // console.log(todos);\r\n  const deleteHandler = () => {\r\n    console.log(todo);\r\n    ///Filter method returns an array of todos who's id do not match the id of the element user clicks on to delete.This will in essence give the\r\n    //todos list WITHOUT the todo the user clicked i.e. it deltes the element clicked.\r\n    setTodos(todos.filter(el => el.id !== todo.id));\r\n  };\r\n  const completeHandler = () => {\r\n    setTodos(\r\n      todos.map(el => {\r\n        if (el.id === todo.id) {\r\n          console.log(todo);\r\n          return {...el, completed: !el.completed};\r\n          console.log(todo);\r\n        }\r\n        return el;\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo\">\r\n      <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>\r\n        {text}\r\n      </li>\r\n      <button className=\"completeBtn\" onClick={completeHandler}>\r\n        <i className=\"fas fa-check\"></i>\r\n      </button>\r\n      <button className=\"trashBtn\" onClick={deleteHandler}>\r\n        <i className=\"fas fa-trash\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":21,"column":6,"nodeType":"39","endLine":21,"endColumn":21,"suggestions":"40"},{"ruleId":"41","severity":1,"message":"42","line":17,"column":11,"nodeType":"43","messageId":"44","endLine":17,"endColumn":29},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filteredTodosHandler'. Either include it or remove the dependency array.","ArrayExpression",["47"],"no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","no-global-assign","no-unsafe-negation",{"desc":"48","fix":"49"},"Update the dependencies array to be: [todos, status, filteredTodosHandler]",{"range":"50","text":"51"},[777,792],"[todos, status, filteredTodosHandler]"]